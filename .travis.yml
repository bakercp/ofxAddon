language: c++
compiler: gcc
sudo: true
git:
  depth: 1
  quiet: true

matrix:
  include:
  # fully specify builds, include can't dynamically expand matrix entries
  # relative order of sudo and env is important so that addons: is recognized

  - os: linux
    dist: trusty
    sudo: required
    env: TARGET="linux64"
    cache: ccache
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - gcc-4.9
          - g++-4.9
          - gdb

# matrix:
#   include:
#     - os: linux
#       dist: trusty
#       sudo: required
#       cache: ccache
#       env: 
#         - TARGET=linuxarmv6l
#         - OTHER_VAR=blah

  # fully specify builds, include can't dynamically expand matrix entries
  # relative order of sudo and env is important so that addons: is recognized

# Linux 64bit, OF master
  # - os: linux
  #   dist: trusty
  #   sudo: required
  #   cache: ccache
  #   env: TARGET="linux64"
  #   addons:
  #     apt:
  #       sources:
  #         - ubuntu-toolchain-r-test
  #       packages:
  #         - realpath
  #         - gcc-4.9
  #         - g++-4.9
  #         - gdb

  # - os: linux
  #   dist: trusty
  #   sudo: required
  #   cache: ccache
  #   env: 
  #     - TARGET=linuxarmv6l
  #     - OTHER_VAR=blah


  # - os: linux
  #   sudo: required
  #   dist: trusty
  #   env: TARGET="linuxarmv7l"
  #   cache:
  #     directories:
  #       - ~/.ccache
  #       #- ~/rpi2_toolchain
  #       # - ~/firmware-master
  #       #- ~/archlinux

# OSX, OF master
  # - os: osx
  #   osx_image: xcode9.4
  #   compiler: clang
  #   env: TARGET="osx"
  #   cache: ccache
        
# before_install:
install:
  - git clone --depth=1 --branch=master https://github.com/openFrameworks/openFrameworks.git ~/openFrameworks
  - echo $TARGET
  - /usr/bin/env bash ~/openFrameworks/scripts/ci/addons/install.sh
  - git clone https://github.com/bakercp/ofx.git ~/openFrameworks/scripts/ofx
script:
  -  /usr/bin/env bash ~/openFrameworks/scripts/ofx/ofx ci script ${TRAVIS_REPO_SLUG#*/}
# after_script:
# after_success:
# after_failure:

# jobs:
#   include:
#     - stage: Deploy Documentation
#       script: 
#         # Install a more recent version of Doxygen.
#         - git clone --depth=1 --branch Release_1_8_15 https://github.com/doxygen/doxygen.git; cd doxygen; mkdir build; cd build; cmake -G "Unix Makefiles" ..; make -s && sudo make install; cd ../..
#         # Copy all markdown docs to the docs folder.
#         - cp *.md docs/
#         - cd docs # Switch to the documentation directory.
#         - sed -i'.bak' -e 's|docs/||g' *.md # Remove docs/ prefix from all .md files for linking.
#         - sed -i'.bak' -e 's|../../..|https://github.com/'"$TRAVIS_REPO_SLUG"'|g' *.md # Fix any links to the Github pages.
#         - doxygen Doxyfile # Generate the documentation.
#         - touch html/.nojekyll # Github pages will discard files beginning w/ underscores without this.
#       deploy:
#         provider: pages
#         skip_cleanup: true
#         github_token: $GITHUB_TOKEN  # Set in the settings page of your repository, as a secure variable
#         keep_history: false
#         local_dir: docs/html
#         on:
#           branch: master
  